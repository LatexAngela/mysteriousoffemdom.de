{"version":3,"sources":["components/NavMenu/navmenu.module.css","components/homePage/HomePage.module.css","hoc/Layout/Layout.module.css","components/NavMenu/LogoforSite.png","components/homePage/ImageFirstPage.png","hoc/Layout/Layout.js","components/NavMenu/navmenu.js","components/homePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","className","classes","this","props","children","Component","NavMenu","LogoImg","src","Logo","alt","NavButtons","Buttons","langButtons","HomePage","HomePageContainer","HomePageTitleContainer","HomePageTitleOne","HomePageTitleTwo","HomePagePictureContainer","HomePagePicture","ImageHomePage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,WAAa,4BAA4B,QAAU,yBAAyB,YAAc,+B,gBCAlLD,EAAOC,QAAU,CAAC,kBAAoB,oCAAoC,uBAAyB,yCAAyC,iBAAmB,mCAAmC,iBAAmB,mCAAmC,yBAA2B,2CAA2C,gBAAkB,oC,sBCAhVD,EAAOC,QAAU,CAAC,OAAS,yB,gBCD3BD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,yJCkB5BC,E,uKAXb,OACC,yBAAKC,UAAWC,IAAQF,QACvB,8BACEG,KAAKC,MAAMC,e,GALIC,a,iCC8BNC,E,uKA5Bb,OACC,yBAAKN,UAAWC,IAAQK,SACvB,yBAAKN,UAAWC,IAAQM,QAASC,IAAKC,IAAMC,IAAI,SAEhD,wBAAIV,UAAWC,IAAQU,YACtB,wBAAIX,UAAWC,IAAQW,SACtB,qCAED,wBAAIZ,UAAWC,IAAQW,SACtB,sCAED,wBAAIZ,UAAWC,IAAQW,SACtB,sCAED,wBAAIZ,UAAWC,IAAQW,SACtB,0CAGF,yBAAKZ,UAAWC,IAAQY,aAAxB,W,GApBkBR,a,iCCgBPS,E,uKAfP,OACI,yBAAKd,UAAWC,IAAQc,mBACpB,yBAAKf,UAAWC,IAAQe,wBACpB,wBAAIhB,UAAWC,IAAQgB,kBAAvB,oDACA,wBAAIjB,UAAWC,IAAQiB,kBAAvB,+CAEJ,yBAAKlB,UAAWC,IAAQkB,0BACrB,yBAAKnB,UAAWC,IAAQmB,gBAAiBZ,IAAKa,IAAeX,IAAI,6B,GAT7DL,aCYRiB,MAXf,WACE,OACE,yBAAKtB,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCEYuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0a230df3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavMenu\":\"navmenu_NavMenu__25Jce\",\"LogoImg\":\"navmenu_LogoImg__1t9rd\",\"NavButtons\":\"navmenu_NavButtons__3zlB_\",\"Buttons\":\"navmenu_Buttons__2Hkc0\",\"langButtons\":\"navmenu_langButtons__3F3in\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomePageContainer\":\"HomePage_HomePageContainer__2Oa3_\",\"HomePageTitleContainer\":\"HomePage_HomePageTitleContainer__1gOin\",\"HomePageTitleOne\":\"HomePage_HomePageTitleOne__2c8jK\",\"HomePageTitleTwo\":\"HomePage_HomePageTitleTwo__24XKW\",\"HomePagePictureContainer\":\"HomePage_HomePagePictureContainer__1jtkV\",\"HomePagePicture\":\"HomePage_HomePagePicture__2wF8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\"};","module.exports = __webpack_public_path__ + \"static/media/LogoforSite.f68d7dfc.png\";","module.exports = __webpack_public_path__ + \"static/media/ImageFirstPage.7d51d486.png\";","import React, { Component } from 'react'\nimport classes from './Layout.module.css'\n\n\n\nclass Layout extends Component {\n render() {\n  return (\n   <div className={classes.Layout}>\n    <main>\n     {this.props.children}\n    </main>\n   </div>\n  )\n }\n}\n\n\nexport default Layout","import React, { Component } from 'react'\nimport classes from './navmenu.module.css'\nimport Logo from './LogoforSite.png'\n\n\nclass NavMenu extends Component {\n render() {\n  return (\n   <div className={classes.NavMenu}>\n    <img className={classes.LogoImg} src={Logo} alt=\"Logo\" />\n\n    <ul className={classes.NavButtons}>\n     <li className={classes.Buttons}>\n      <h3>HOME</h3>\n     </li>\n     <li className={classes.Buttons}>\n      <h3>PHOTO</h3>\n     </li>\n     <li className={classes.Buttons}>\n      <h3>VIDEO</h3>\n     </li>\n     <li className={classes.Buttons}>\n      <h3>MEETINGS</h3>\n     </li>\n    </ul>\n    <div className={classes.langButtons}>\n     RU\n     </div>\n   </div>\n  )\n\n }\n}\n\n\nexport default NavMenu;","import React,{Component} from 'react'\nimport classes from './HomePage.module.css'\nimport ImageHomePage from './ImageFirstPage.png'\n\nclass HomePage extends Component{\n    render() {\n        return(\n            <div className={classes.HomePageContainer}>\n                <div className={classes.HomePageTitleContainer}>\n                    <h1 className={classes.HomePageTitleOne}>МИСТЕРИИ</h1>\n                    <h1 className={classes.HomePageTitleTwo}>ФЕМДОМА</h1>\n                </div>\n                <div className={classes.HomePagePictureContainer}>\n                   <img className={classes.HomePagePicture} src={ImageHomePage} alt=\"MysteriousOfFemdom\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default HomePage","import React from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport NavMenu from './components/NavMenu/navmenu'\nimport HomePage from \"./components/homePage/HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <NavMenu />\n        <HomePage/>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}